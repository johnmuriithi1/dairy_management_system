{% extends 'users_management/base.html' %}

{% block title %}Dashboard{% endblock %}

{% block content %}
    <h2>Welcome, {{ user.username }}!</h2>

    {% if farmer %}
        <h3>Farmer Dashboard</h3>
        <p><strong>Phone Contact:</strong> {{ farmer.phone_contact }}</p>
        <p><strong>Email:</strong> {{ farmer.email }}</p>
        <p><strong>Number of Cows:</strong> {{ farmer.number_of_cows }}</p> 
        <p><strong>Location:</strong> {{ farmer.geo_location }}</p>
        <a href="{% url 'profile_edit' %}" class="btn btn-primary">Edit Profile</a>
        <a href="{% url 'livestock_list' %}" class="btn btn-secondary">View Herd Data</a> 
        <a href="{% url 'farm_agent_list' %}" class="btn btn-secondary">View Farm Agents</a> 
        <a href="{% url 'feed_list' %}" class="btn btn-secondary">View Feeds</a>
        <a href="{% url 'reports' %}" class="btn btn-secondary">View Reports</a> 

    {% elif farm_agent %}
        <h3>Farm Agent Dashboard</h3>
        <p><strong>Agent Code:</strong> {{ farm_agent.agent_code }}</p>
        <p><strong>Full Name:</strong> {{ farm_agent.full_name }}</p>
        <p><strong>Contact:</strong> {{ farm_agent.phone_contact }}</p>
        <p><strong>County:</strong> {{ farm_agent.county }}</p>
        <a href="{% url 'profile_edit' %}" class="btn btn-primary">Edit Profile</a>
        <a href="{% url 'farm_agent_dashboard' %}" class="btn btn-secondary">View Assigned Tasks</a> 
        <a href="{% url 'create_production_report' %}" class="btn btn-secondary">Create Production Report</a> 
        <a href="{% url 'reports' %}" class="btn btn-secondary">View All Animal Reports</a> 

    {% elif veterinary_partner %}
        <h3>Veterinary Partner Dashboard</h3>
        <p><strong>Name:</strong> {{ veterinary_partner.name }}</p>
        <p><strong>Contact:</strong> {{ veterinary_partner.phone_contact }}</p>
        <a href="{% url 'profile_edit' %}" class="btn btn-primary">Edit Profile</a>
        <a href="#" class="btn btn-secondary">View Service Requests</a> 
        <a href="#" class="btn btn-secondary">Manage Veterinary Products</a>

    {% else %}
        <h3>No User Information Found</h3>
    {% endif %}
{% endblock %}

**Explanation:**

- **Farm Agent Permissions:**
    - `reports` view: If the user is a farm agent, it fetches all milk production data and health records.
    - `farm_agent_dashboard` view: Displays assigned tasks for the farm agent.
    - `create_production_report` view: Allows farm agents to create production reports (you'll need to implement the logic for this).

- **Template Updates:**
    - Added links for "View Assigned Tasks" and "Create Production Report" to the farm agent dashboard.
    - Updated the "View Reports" link to indicate that it displays all animal reports for farm agents.

**Remember to:**

- Create the `Task` model and related views/templates.
- Implement the `create_production_report` view and its associated template.
- Adjust the URL patterns in your `urls.py` file accordingly.
- Implement necessary security measures and data validation.

This enhanced implementation provides more specific functionalities for farm agents, including viewing assigned tasks, creating production reports, and accessing all animal reports.
```python
from django.shortcuts import render, redirect
from django.contrib import messages
from .models import LiveStock, AnimalProfile, MilkProduction, HealthRecord, Feed, Farmer, FarmAgent, VeterinaryPartner, Task 
from .forms import LiveStockForm, AnimalProfileForm, MilkProductionForm, HealthRecordForm, FeedForm

def dashboard(request):
    if request.user.is_authenticated:
        if hasattr(request.user, 'farmer'):
            farmer = request.user.farmer
            return render(request, 'dashboard.html', {'user': request.user, 'farmer': farmer})
        elif hasattr(request.user, 'farmagent'):
            farm_agent = request.user.farmagent
            return render(request, 'dashboard.html', {'user': request.user, 'farm_agent': farm_agent})
        elif hasattr(request.user, 'veterinarypartner'):
            veterinary_partner = request.user.veterinarypartner
            return render(request, 'dashboard.html', {'user': request.user, 'veterinary_partner': veterinary_partner})
        else:
            return render(request, 'dashboard.html', {'user': request.user}) 
    else:
        return redirect('login')

# ... Livestock, AnimalProfile, MilkProduction, HealthRecord, Feed views (with farmer permissions)

def farm_agent_list(request):
    if hasattr(request.user, 'farmer'):
        farm_agents = FarmAgent.objects.all() 
        return render(request, 'farm_agent/farm_agent_list.html', {'farm_agents': farm_agents})
    else:
        messages.error(request, "You don't have permission to view farm agents.")
        return redirect('dashboard')

def feed_list(request):
    if hasattr(request.user, 'farmer'):
        feeds = Feed.objects.all()  # Allow farmer to view all feeds
        return render(request, 'feed/feed_list.html', {'feeds': feeds})
    else:
        messages.error(request, "You don't have permission to view feeds.")
        return redirect('dashboard')

def reports(request):
    if hasattr(request.user, 'farmer'):
        # Implement logic to fetch relevant reports for the farmer
        milk_production_data = MilkProduction.objects.filter(livestock__farmer=request.user.farmer)
        health_records = HealthRecord.objects.filter(animal__farmer=request.user.farmer) 
        # ... other reports 
        return render(request, 'reports/reports.html', {'milk_production_data': milk_production_data, 'health_records': health_records})
    elif hasattr(request.user, 'farmagent'): 
        # Allow farm agent to view all animal reports
        milk_production_data = MilkProduction.objects.all()
        health_records = HealthRecord.objects.all()
        # ... other reports
        return render(request, 'reports/reports.html', {'milk_production_data': milk_production_data, 'health_records': health_records}) 
    else:
        messages.error(request, "You don't have permission to view reports.")
        return redirect('dashboard')

def farm_agent_dashboard(request):
    if hasattr(request.user, 'farmagent'):
        farm_agent = request.user.farmagent
        assigned_tasks = Task.objects.filter(assigned_to=farm_agent) 
        return render(request, 'farm_agent/dashboard.html', {'farm_agent': farm_agent, 'assigned_tasks': assigned_tasks})
    else:
        messages.error(request, "You don't have permission to access this page.")
        return redirect('dashboard')

def create_production_report(request):
    if hasattr(request.user, 'farmagent'):
        if request.method == 'POST':
            # Implement logic to create and save the production report
            # ...
            messages.success(request, 'Production report created successfully!')
            return redirect('farm_agent_dashboard')  # Redirect to farm agent dashboard
        else:
            # Provide a form for the farm agent to enter production report data
            return render(request, 'farm_agent/create_production_report.html') 
    else:
        messages.error(request, "You don't have permission to create production reports.")
        return redirect('dashboard')

# ... other views for FarmAgent, etc.